name: C

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - CC: "gcc"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Env
        run: echo "GITHUB_OS_ARCH=$(uname -m)" >> $GITHUB_ENV
      - name: Build and Test
        run: |
          ./test.sh
      - name: Tar Artifact
        run: |
          tar -cvzf c-linux-${{ GITHUB_OS_ARCH }}.tgz out/
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: c-linux-${{ GITHUB_OS_ARCH }}.tgz
          path: c-linux-${{ GITHUB_OS_ARCH }}.tgz

  # MacOS:
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       include:
  #         - CC: "clang"
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Build and Test
  #       run: |
  #         ./test.sh
  #         tar -cvzf c-macos-$(uname -m).tgz out/
  #     - name: Upload Build Artifact
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: c-macos-$(uname -m).tgz
  #         path: c-macos-$(uname -m).tgz

  # Windows:
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       include:
  #         - CC: "cl"
  #   defaults:
  #     run:
  #       shell: msys2 {0}
  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0 # checkout history and tags
  #   - name: Install Dependencies
  #     uses: msys2/setup-msys2@v2
  #     with:
  #       update: true
  #       install: git make tar mingw-w64-x86_64-gcc mingw-w64-x86_64
  #   - name: Build and Test
  #     run: |
  #       CC=cl ./test.sh
  #       tar -cvzf c-winnt-$(uname -m).tgz out/
  #   - name: Upload Build Artifact
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: c-winnt-$(uname -m).tgz
  #       path: c-winnt-$(uname -m).tgz

# EOF
