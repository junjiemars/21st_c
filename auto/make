
echo "creating $CL_MAKEFILE"

mkdir -p $CL_OBJS/bin \
         $CL_OBJS/lib \
				 $CL_OBJS/tmp \
				 $CL_OBJS/log \
				 $CL_OBJS/conf

cat << END > $CL_MAKEFILE

CC = $CC
CFLAGS = $CFLAGS
CPP = $CPP
LINK = $LINK
CL_INCS = -I $CL_OBJS

defualt: build

END


cl_sticks=()
cl_deps=


for opt in "${CL_HAS_STICKS[@]}"; do

	stick=`echo $opt \
				 | sed -e 's/\ *--has-\([a-zA-Z][a-zA-Z]*\)/\1/' \
				 | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`

	if [ -d $CL_SRC/$stick ]; then
		cl_sticks+=($CL_OBJS/$CL_BIN_PATH/$stick)
	else
		echo "checking for $CL_SRC/$stick ... no found"
  fi

done


cl_build="build:${cl_deps:+ modules}${cl_sticks:+ binaries}"

if [ "$cl_build" != "build:" ]; then

	cat << END >> $CL_MAKEFILE

$cl_build

END

fi

if [ -n "$cl_deps" ]; then

	cat << END >> $CL_MAKEFILE

modules: $cl_deps
END

	for dep in $cl_deps; do

		cat << END >> $CL_MAKEFILE
		
END

	done

fi

if [ -n "$cl_sticks" ]; then

	cat << END >> $CL_MAKEFILE
	
binaries: ${cl_sticks[@]}

END
	
	for stick in ${cl_sticks[@]}; do

		stick_bin=`basename $stick`
		stick_src=$CL_SRC/$stick_bin

		[ -f $stick_src/configure ] && . $stick_src/configure

		src_path=$stick_src/
		tmp_path=$CL_OBJS/tmp/
		lib_path=$CL_OBJS/lib/
		bin_path=$CL_OBJS/bin/

		echo $cl_n "`cat $stick_src/Makefile`" \
			| sed -e "s@\$(src_path)@$src_path@g" \
						-e "s@\$(tmp_path)@$tmp_path@g" \
						-e "s@\$(lib_path)@$lib_path@g" \
						-e "s@\$(bin_path)@$bin_path@g" \
		>> $CL_MAKEFILE 

	done

fi
