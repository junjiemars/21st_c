
echo "creating $CL_MAKEFILE"

mkdir -p $CL_OBJS/bin \
         $CL_OBJS/lib \
				 $CL_OBJS/log

cat << END > $CL_MAKEFILE

CC = $CC
CFLAGS = $CFLAGS
CPP = $CPP
LINK = $LINK

defualt: build

END


cl_sticks=
cl_deps=

if [ "$H_HI" = "yes" ]; then
	if [ "$CL_PLATFORM" != win32 ]; then
		cl_include="stdio.h" . auto/include
		cl_feature="localtime_r()"
		cl_feature_name="CL_HAVE_LOCALTIME_R"
		cl_feature_run=no
		cl_feature_incs="#include <time.h>"
		cl_feature_path=
		cl_feature_libs=
		cl_feature_test="struct tm t; time_t c=0; localtime_r(&c, &t)"
		. auto/feature
	fi
  cl_sticks=objs/$CL_BIN_PATH/hi${cl_sticks:+ $cl_sticks}
fi

if [ "$H_BITS" = "yes" ]; then
  cl_sticks=objs/$CL_BIN_PATH/bits${cl_sticks:+ $cl_sticks}
fi

if [ "$H_ENV" = "yes" ]; then
	cl_sticks=objs/$CL_BIN_PATH/env${cl_sticks:+ $cl_sticks}
fi

if [ "$H_ENDIAN" = "yes" ]; then
	cl_sticks=objs/$CL_BIN_PATH/endian${cl_sticks:+ $cl_sticks}
fi

if [ "$H_FIBO" = "yes" ]; then
	cl_sticks=objs/$CL_BIN_PATH/fibo${cl_sticks:+ $cl_sticks}
fi

if [ "$H_MATH" = "yes" ]; then
	cl_sticks=objs/$CL_BIN_PATH/math${cl_sticks:+ $cl_sticks}
fi

cl_build="build:${cl_deps:+ modules}${cl_sticks:+ binaries}"

if [ "$cl_build" != "build:" ]; then

	cat << END >> $CL_MAKEFILE

$cl_build

END

fi

if [ -n "$cl_deps" ]; then

	cat << END >> $CL_MAKEFILE

modules: $cl_deps
END

	for dep in $cl_deps; do

		cat << END >> $CL_MAKEFILE
		
END

	done

fi

if [ -n "$cl_sticks" ]; then

	cat << END >> $CL_MAKEFILE
	
binaries: $cl_sticks

END
	
	for stick in $cl_sticks; do

		stick_bin=`basename $stick`
		stick_src=src/$stick_bin

		echo $cl_n "`cat $stick_src/Makefile`" \
			| sed -e "s@$stick_bin\.out@$stick@g" \
						-e "s@\([-_a-zA-Z0-9][-_a-zA-Z0-9]*\.[a-z][a-z]*\)@$stick_src\/\1@g" \
		>> $CL_MAKEFILE 

	done

fi
