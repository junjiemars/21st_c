
echo "creating $CL_MAKEFILE"

mkdir -p $CL_OBJS/bin \
         $CL_OBJS/lib \
				 $CL_OBJS/inc \
				 $CL_OBJS/tmp \
				 $CL_OBJS/log \
				 $CL_OBJS/conf

cat << END > $CL_MAKEFILE

CC = $CC
CPP = $CPP
LINK = $LINK
CFLAGS = ${CL_VERBOSE:+$CL_VERBOSE }$CFLAGS
LDFLAGS= ${CL_VERBOSE:+$CL_VERBOSE }$LDFLAGS

CL_PIC_OPT = $CL_PIC_OPT

CL_INCS = -I$CL_OBJS -I$CL_OBJS/inc 
CL_LDS = -L$CL_OBJS/lib



defualt: build


END


cl_sticks=()


for opt in "${CL_HAS_STICKS[@]}"; do

	stick=`echo $opt \
				 | sed -e 's/\ *--has-\([a-zA-Z][a-zA-Z]*\)/\1/' \
				 | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`

	if [ -d $CL_SRC/$stick ]; then
		cl_sticks+=($stick)
	else
		echo "checking for $CL_SRC/$stick ... no found"
		cat << END >> $CL_AUTOCONF_ERR
---------------------------------------
checking for $CL_SRC/$stick ... no found

END

  fi

done




if [ -n "$cl_sticks" ]; then

	cat << END >> $CL_MAKEFILE
	

build: ${cl_sticks[@]}


END
	
	for stick in ${cl_sticks[@]}; do

		stick_src=$CL_SRC/$stick

		[ -f $stick_src/configure ] && . $stick_src/configure

		src_path=$stick_src/
		inc_path=$CL_OBJS/inc/
		tmp_path=$CL_OBJS/tmp/
		lib_path=$CL_OBJS/lib/
		bin_path=$CL_OBJS/bin/

		echo "#---------------------------------------" >> $CL_MAKEFILE
		echo $cl_n "`cat $stick_src/Makefile`" \
			| sed -e "s@\$(src_path)@$src_path@g" \
					  -e "s@\$(inc_path)@$inc_path@g" \
						-e "s@\$(tmp_path)@$tmp_path@g" \
						-e "s@\$(lib_path)@$lib_path@g" \
						-e "s@\$(bin_path)@$bin_path@g" \
		>> $CL_MAKEFILE 
		echo >> $CL_MAKEFILE

	done

fi
