# -*- mode:sh -*- vim:ft=sh
#


nm_include="stdint.h" . ${NORE_ROOT}/auto/include
nm_include="inttypes.h" . ${NORE_ROOT}/auto/include


nm_feature="c11 static_assert()"
nm_feature_name="nm_have_c11_static_assert"
nm_feature_run=no
nm_feature_h="#include <assert.h>"
nm_feature_flags="$nm_std_opt"
nm_feature_inc=
nm_feature_ldlibs=
nm_feature_test="
enum {N=5}; static_assert(N==5, \"N is not equal 5\");"
. ${NORE_ROOT}/auto/feature


nm_feature="C99 variadic macro"
nm_feature_name="nm_have_variadic_macro"
nm_feature_run=yes
nm_feature_h="#include <stdio.h>
#define var(dummy, ...)  sprintf(__VA_ARGS__)"
nm_feature_flags=
nm_feature_inc=
nm_feature_ldlibs=
nm_feature_test="
char buf[30]; buf[0] = '0';
var(0, buf, \"%d\", 1);
if (buf[0] != '1') return 1;"
. ${NORE_ROOT}/auto/feature


nm_feature="C11 sprintf_s fn"
nm_feature_name="nm_have_sprintf_s_fn"
nm_feature_run=no
nm_feature_h="#include <stdio.h>"
nm_feature_flags=
nm_feature_inc=
nm_feature_ldlibs=
nm_feature_test="
char buf[32];
sprintf_s(buf, sizeof(buf), \"%s\", \"xyz\")";
. ${NORE_ROOT}/auto/feature


nm_feature="C99 snprintf fn"
nm_feature_name="nm_have_snprintf_fn"
nm_feature_run=no
nm_feature_h="#include <stdio.h>"
nm_feature_flags=
nm_feature_inc=
nm_feature_ldlibs=
nm_feature_test="
char buf[32];
snprintf(buf, sizeof(buf), \"%s\", \"xyz\")";
. ${NORE_ROOT}/auto/feature


nm_feature="strn* fn: strnlen,strncpy,strncmp"
nm_feature_name="nm_have_strn_any_fn"
nm_feature_run=no
nm_feature_h="#include <string.h>"
nm_feature_flags=
nm_feature_inc=
nm_feature_ldlibs=
nm_feature_test="
char *xyz = \"xyz\";
char buf[16];
size_t len = strnlen(xyz, 16);
strncpy(buf, xyz, sizeof(buf));
strncmp(buf, xyz, len)";
. ${NORE_ROOT}/auto/feature


nm_feature="C11 str*_s fn: strlen_s,strcpy_s"
nm_feature_name="nm_have_str_s_any_fn"
nm_feature_run=no
nm_feature_h="#include <string.h>"
nm_feature_flags=
nm_feature_inc=
nm_feature_ldlibs=
nm_feature_test="
char *xyz = \"xyz\";
char buf[16];
size_t len = strlen(xyz);
strcpy_s(buf, sizeof(buf), xyz);"
. ${NORE_ROOT}/auto/feature


nm_feature="NA1 strdup fn"
nm_feature_name="nm_have_strdup_fn"
nm_feature_run=no
nm_feature_h="#include <string.h>"
nm_feature_flags=
nm_feature_inc=
nm_feature_ldlibs=
nm_feature_test="
char *xyz = strdup(\"xyz\");"
. ${NORE_ROOT}/auto/feature

