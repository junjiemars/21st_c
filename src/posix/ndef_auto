#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## posix/ndef_auto
####


if [ -z "$define_ndef_h" ]; then

define_ndef_h="ndef.h"


if [ -z "$POSIX_ROOT" ]; then
  POSIX_ROOT="src/posix"
fi


# check for <npstd.h>
. ${POSIX_ROOT}/npstd_auto


if [    "$ndef_restrict" = "yes"                \
     -o "$ncc_static_assert" = "yes"            \
   ]; then
  echo "checking for ndef.h ..."
else
  return
fi





# check restrict keyword
#----------------------------------------
nm_feature="restrict"
nm_feature_name="nm_have_restrict"
nm_feature_run=
nm_feature_h=
nm_feature_flags="$CFLAGS"
nm_feature_test='int x = 0x11; int *restrict p = &x; (void)sizeof(p);'
. ${NORE_ROOT}/auto/feature
if [ "yes" != $nm_found ]; then
	nm_feature="__restrict keyword"
	nm_feature_name="nm_have___restrict"
	nm_feature_run=
	nm_feature_h=
	nm_feature_flags="$CFLAGS"
	nm_feature_test='int x = 0x11; int *__restrict p = &x; (void)sizeof(p);'
	. ${NORE_ROOT}/auto/feature
fi                              # end of restrict


# check static_assert
#----------------------------------------
nm_feature="static_assert"
nm_feature_name="nm_have_static_assert"
nm_feature_run=yes
nm_feature_h="#include <assert.h>"
nm_feature_flags="$CFLAGS"
nm_feature_test='enum {N=5}; static_assert(N==5, "N is not equal 5");'
. ${NORE_ROOT}/auto/feature     # end of static_assert
if [ "yes" != $nm_found ]; then
	nm_feature="_Static_assert"
	nm_feature_name="nm_have___static_assert"
	nm_feature_run=
	nm_feature_h=
	nm_feature_flags="$CFLAGS"
	nm_feature_test='enum {N=5}; static_assert(N==5, "N is not equal 5");'
	. ${NORE_ROOT}/auto/feature
fi                              # end of _Static_assert



fi                              # define_npstd_h




# eof
