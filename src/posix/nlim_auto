#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## check posix features
####


. ${POSIX_ROOT}src/posix/npstd_auto


echo "checking for nlim.h ..."


# check sysconf
#----------------------------------------
nm_feature="sysconf"
nm_feature_name="nm_have_sysconf"
nm_feature_run=yes
nm_feature_h="#include <unistd.h>"
nm_feature_flags="$nm_std_opt"
nm_feature_test="sysconf(_SC_ARG_MAX);"
. ${NORE_ROOT}/auto/feature     # end of sysconf


# check LINE_MAX
#----------------------------------------
case $NM_SYSTEM in
  Linux|Darwin)
    nm_feature="LINE_MAX"
    nm_feature_name="nm_line_max"
    nm_feature_run=value
    nm_feature_h='
#include <stdio.h>
#include <unistd.h>
#include <limits.h>
'
    nm_feature_flags=
    nm_feature_test='
long line_max = 2048;
#if (_SC_LINE_MAX)
    long sc = sysconf(_SC_LINE_MAX);
    if (sc > 0) {
       line_max = sc;
    }
#endif
  printf("%ld\n", line_max);
  return 0;
'
    . ${NORE_ROOT}/auto/feature
    ;;
  WinNT)
    nm_feature="LINE_MAX"
    nm_feature_name="nm_line_max"
    nm_feature_run=value
    nm_feature_h='
#include <stdio.h>
#include <limits.h>
#include <windows.h>
'
    nm_feature_flags=
    nm_feature_test='
long line_max = 2048;
#if defined(LINE_MAX)
    if (LINE_MAX > 0) {
       line_max = LINE_MAX;
    }
#endif
  printf("%d\n", line_max);
  return 0;
'
    . ${NORE_ROOT}/auto/feature
    ;;
  *)
    ;;
esac                            # end of LINE_MAX


# check PAGESIZE
#----------------------------------------
case $NM_SYSTEM in
  Linux|Darwin)
    nm_feature="PAGESIZE"
    nm_feature_name="nm_pagesize"
    nm_feature_run=value
    nm_feature_h='
#include <stdio.h>
#include <unistd.h>
'
    nm_feature_flags=
    nm_feature_test='
long sc = sysconf(_SC_PAGESIZE);
printf("%ld\n", sc);
return 0;
'
    . ${NORE_ROOT}/auto/feature
    ;;
  WinNT)
    nm_feature="PAGESIZE"
    nm_feature_name="nm_pagesize"
    nm_feature_run=value
    nm_feature_h=
    nm_feature_flags=
    nm_feature_test=
    . ${NORE_ROOT}/auto/feature
    ;;
  *)
    ;;
esac                            # end of PAGESIZE


# check GETPW_R_SIZE_MAX
#----------------------------------------
case $NM_SYSTEM in
  Linux|Darwin)
    nm_feature="GETPW_R_SIZE_MAX"
    nm_feature_name="nm_getpw_r_size_max"
    nm_feature_run=value
    nm_feature_h='
#include <stdio.h>
#include <unistd.h>
'
    nm_feature_flags=
    nm_feature_test='
long sc = sysconf(_SC_GETPW_R_SIZE_MAX);
printf("%ld\n", sc);
return 0;
'
    . ${NORE_ROOT}/auto/feature
    ;;
  WinNT)
    nm_feature="GETPW_R_SIZE_MAX"
    nm_feature_name="nm_getpw_r_size_max"
    nm_feature_run=value
    nm_feature_h=
    nm_feature_flags=
    nm_feature_test=
    . ${NORE_ROOT}/auto/feature
    ;;
  *)
    ;;
esac                            # end of GETPW_R_SIZE_MAX




# eof
