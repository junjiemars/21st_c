#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## check
####


# check compiler sanitize features
#----------------------------------------
case "$CC_NAME" in
  gcc|clang)
    nm_feature="$CC_NAME -fsanitize=address"
    nm_feature_name=
    nm_feature_indent=yes
    nm_feature_run=no
    nm_feature_h=
    nm_feature_flags='-fsanitize=address'
    nm_feature_test=
    . ${NORE_ROOT}/auto/feature
    if [ yes = $nm_found ]; then
      flag=has_sanitize op=":=" value="YES" \
          . ${NORE_ROOT}/auto/make_define
      flag=has_sanitize_address op=":=" value="YES" \
          . ${NORE_ROOT}/auto/make_define
      flag=cflags_sanitize op="+=" value=$nm_feature_flags \
          . ${NORE_ROOT}/auto/make_define
    fi
    ;;
  msvc)
    ;;
esac

# check compiler sanitize features
#----------------------------------------
case "$CC_NAME" in
  gcc|clang)
    nm_feature="$CC_NAME -fsanitize=leak"
    nm_feature_name=
    nm_feature_indent=yes
    nm_feature_run=no
    nm_feature_h=
    nm_feature_flags='-fsanitize=leak'
    nm_feature_test=
    . ${NORE_ROOT}/auto/feature
    if [ yes = $nm_found ]; then
      flag=has_sanitize op=":=" value="YES" \
          . ${NORE_ROOT}/auto/make_define
      flag=has_sanitize_leak op=":=" value="YES" \
          . ${NORE_ROOT}/auto/make_define
      flag=cflags_sanitize op="+=" value=$nm_feature_flags \
          . ${NORE_ROOT}/auto/make_define
    fi
    ;;
  msvc)
    ;;
esac


## check OpenMP features
##----------------------------------------
nm_feature="openmp"
nm_feature_name="nm_have_openmp"
nm_feature_run=no
nm_feature_h='#include <omp.h>'
nm_feature_flags="$nm_openmp_opt"
nm_feature_test='#pragma omp parallel
                {};'
. ${NORE_ROOT}/auto/feature
if [ yes = $nm_found ]; then
  flag=has_openmp op=":=" value="YES" \
	    . ${NORE_ROOT}/auto/make_define
	flag=cflags_openmp op="+=" value=$nm_feature_flags \
      . ${NORE_ROOT}/auto/make_define
	nm_feature="omp_get_num_procs fn"
	nm_feature_name="nm_have_omp_get_num_procs_fn"
	nm_feature_run=no
	nm_feature_h='#include <omp.h>'
	nm_feature_flags="$nm_openmp_opt"
	nm_feature_test='omp_get_num_procs();'
	. ${NORE_ROOT}/auto/feature
fi


## check pthread features
##----------------------------------------
nm_feature="pthread"
nm_feature_name="nm_have_pthread_h"
nm_feature_run=no
nm_feature_h="#include <pthread.h>"
nm_feature_flags=
nm_feature_test='pthread_t t[4];'
. ${NORE_ROOT}/auto/feature
if [ yes = $nm_found ]; then
  flag=has_pthread op=":=" value="YES" \
      . ${NORE_ROOT}/auto/make_define
fi



# eof
