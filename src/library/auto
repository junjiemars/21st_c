# -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## library/auto
####


# check features based on Compiler
#----------------------------------------
case $CC_NAME in
  clang|gcc)
    nm_feature="$CC_NAME -fPIC"
    nm_feature_name=
    nm_feature_indent=yes
    nm_feature_run=no
    nm_feature_h=
    nm_feature_flags=-fPIC
    nm_feature_test=
    . ${NORE_ROOT}/auto/feature
    if [ yes = $nm_found ]; then
      flag=CFLAGS op='+=' value='-fPIC' . ${NORE_ROOT}/auto/make_define
    fi
  ;;

  msvc)
    # msvc do not use position independent code
  ;;

esac

# check linker's -rpath features
#----------------------------------------
ld_rpath_opt=NO
case "$CC_NAME" in
   gcc)
     nm_feature="$CC_NAME -Wl,-rpath"
     nm_feature_name=
     nm_feature_indent=yes
     nm_feature_run=no
     nm_feature_h=
     nm_feature_flags='-Wl,-rpath=$(lib_path)'
     nm_feature_test=
     . ${NORE_ROOT}/auto/feature
     if [ yes = $nm_found ]; then
       flag=nm_link_opt op=":=" value="rpath" \
           . ${NORE_ROOT}/auto/make_define
       flag=LDFLAGS op="+=" value=$nm_feature_flags \
           . ${NORE_ROOT}/auto/make_define
       ld_rpath_opt=YES
       flag=ld_rpath_opt op=":=" value="$ld_rpath_opt" \
           . ${NORE_ROOT}/auto/make_define
     fi
     ;;
   clang)
     nm_feature="$CC_NAME -rpath"
     nm_feature_name=
     nm_feature_indent=yes
     nm_feature_run=no
     nm_feature_h=
     nm_feature_flags='-rpath $(lib_path)'
     nm_feature_test=
     . ${NORE_ROOT}/auto/feature
     if [ yes = $nm_found ]; then
       flag=LDFLAGS op="+=" value=$nm_feature_flags \
           . ${NORE_ROOT}/auto/make_define
       ld_rpath_opt=YES
       flag=ld_rpath_opt op=":=" value="$ld_rpath_opt" \
           . ${NORE_ROOT}/auto/make_define
     fi
     ;;
   msvc)
     ;;
esac
if [ "$ld_rpath_opt" != "YES" ]; then
  flag=ld_rpath_opt op=":=" value=NO \
      . ${NORE_ROOT}/auto/make_define
fi


# check features based on OS
#----------------------------------------
case $NM_SYSTEM in
  Darwin)
    ;;

  Linux)
    nm_feature="math lib"
    nm_feature_name="nm_have_math_lib"
    nm_feature_indent=yes
    nm_feature_run=yes
    nm_feature_h="#include <math.h>"
    nm_feature_tails="${nm_lib_opt}m"
    nm_feature_test='int x = round(2.5);
                     return (2 == x);'
    . ${NORE_ROOT}/auto/feature
    if [ yes = $nm_found ]; then
      flag=stdmath_lib_opt op='+=' value='$(nm_lib_opt)m' \
          . ${NORE_ROOT}/auto/make_define
    fi
    ;;

  WinNT)
    ;;

  *)
    ;;
esac


# eof
