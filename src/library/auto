#!/bin/bash
# generated by Nore
#

# check features
#----------------------------------------
#nm_feature="endian"
#nm_feature_name="nm_have_little_endian"
#nm_feature_run=value
#nm_feature_h="#include <stdio.h>"
#nm_feature_flags=
#nm_feature_inc=
#nm_feature_ldlibs=
#nm_feature_test='int i=0x11223344;
#                 char *p = (char *)&i;
#             		int le = (0x44 == *p);
#                 printf("%d", le);'
#. ${NORE_ROOT}/auto/feature


# check features based on Compiler
#----------------------------------------
case $CC_NAME in
	clang|gcc)
		nm_feature="$CC_NAME -fPIC switch"
		nm_feature_name=
		nm_feature_run=no
		nm_feature_h=
		nm_feature_flags=-fPIC
		nm_feature_inc=
		nm_feature_ldlibs=
		nm_feature_test=
		. ${NORE_ROOT}/auto/feature

		if [ yes = $nm_found ]; then
			flag=nm_pic_opt op="=" value=-fPIC . ${NORE_ROOT}/auto/make_define
		fi
	;;

	msvc)
    # msvc do not use position independent code
  ;;

esac


# check features based on OS
#----------------------------------------
case $NM_SYSTEM in
	Darwin)
	  ;;

	Linux)
		nm_feature="math lib"
		nm_feature_name="nm_have_math_lib"
		nm_feature_run=yes
		nm_feature_h="#include <math.h>"
		nm_feature_flags=
		nm_feature_inc=
		nm_feature_ldlibs=-lm
		nm_feature_test='int x = round(2.5);
										 return (2 == x);'
		. ${NORE_ROOT}/auto/feature

		if [ yes = $nm_found ]; then
			flag=LDLIBS op="+=" value=$nm_feature_ldlibs . ${NORE_ROOT}/auto/make_define
		fi

	  ;;
	WinNT)
	  ;;
	*)
	  ;;
esac

