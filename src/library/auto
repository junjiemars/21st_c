# -*- mode:sh -*- vim:ft=sh
#


# check features based on Compiler
#----------------------------------------
case $CC_NAME in
	clang|gcc)
		nm_feature="$CC_NAME -fPIC switch"
		nm_feature_name=
		nm_feature_run=no
		nm_feature_h=
		nm_feature_flags=-fPIC
		nm_feature_test=
		. ${NORE_ROOT}/auto/feature
		if [ yes = $nm_found ]; then
			flag=CFLAGS op='+=' value='-fPIC' . ${NORE_ROOT}/auto/make_define
		fi
	;;

	msvc)
    # msvc do not use position independent code
  ;;

esac

# check linker's -rpath features
#----------------------------------------
case "$CC_NAME" in
   gcc|clang)
     nm_feature="$CC_NAME -Wl,-rpath"
     nm_feature_name=
     nm_feature_indent=yes
     nm_feature_run=no
     nm_feature_h=
     nm_feature_flags='-Wl,-rpath=$(lib_path)'
     nm_feature_test=
     . ${NORE_ROOT}/auto/feature
     if [ yes = $nm_found ]; then
       flag=nm_link_opt op=":=" value="rpath" \
           . ${NORE_ROOT}/auto/make_define
       flag=LDFLAGS op="+=" value=$nm_feature_flags \
           . ${NORE_ROOT}/auto/make_define
     fi
     ;;
   msvc)
     ;;
esac


# check features based on OS
#----------------------------------------
case $NM_SYSTEM in
	Darwin)
	  ;;

	Linux)
		nm_feature="math lib"
		nm_feature_name="nm_have_math_lib"
		nm_feature_run=yes
		nm_feature_h="#include <math.h>"
		nm_feature_flags=
		nm_feature_test='int x = round(2.5);
										 return (2 == x);'
		. ${NORE_ROOT}/auto/feature

		if [ yes = $nm_found ]; then
			flag=LDLIBS op='+=' value='-lm' . ${NORE_ROOT}/auto/make_define
		fi
	  ;;
	
	WinNT)
	  ;;
	
	*)
		;;
esac

