#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## ld/auto
####


if [ -z "$POSIX_ROOT" ]; then
  POSIX_ROOT="src/posix"
fi


# check posix features
. src/posix/nustd_auto


echo "checking for {ld} ..."


# check entry point
#----------------------------------------
nm_feature="-e"
nm_feature_name=
nm_feature_indent=yes
nm_feature_run=yes
nm_feature_h=
nm_feature_flags='-e_main'
nm_feature_test='return 0;'
. ${NORE_ROOT}/auto/feature
if [ yes = $nm_found ]; then
  flag="ld_entry_opt" op=":=" value="-e" . ${NORE_ROOT}/auto/make_define
fi


# check static option
#----------------------------------------
nm_feature="-static"
nm_feature_name=
nm_feature_indent=yes
nm_feature_run=yes
nm_feature_h=
nm_feature_flags='-static'
nm_feature_test='return 0;'
. ${NORE_ROOT}/auto/feature
if [ yes = $nm_found ]; then
  flag="ld_static_opt" op="=" value="$nm_feature"  \
    . ${NORE_ROOT}/auto/make_define
fi

# check nostartfiles option
#----------------------------------------
nm_feature="-nostartfiles"
nm_feature_name=
nm_feature_indent=yes
nm_feature_run=no
nm_feature_h=
nm_feature_flags=
nm_feature_test=
. ${NORE_ROOT}/auto/feature
if [ yes = $nm_found ]; then
  flag="ld_nostartfiles_opt" op=":=" value="$nm_feature"  \
    . ${NORE_ROOT}/auto/make_define
fi

# check nostdlib option
#----------------------------------------
nm_feature="-nostdlib"
nm_feature_name=
nm_feature_indent=yes
nm_feature_run=no
nm_feature_h=
nm_feature_flags=
nm_feature_test=
. ${NORE_ROOT}/auto/feature
if [ yes = $nm_found ]; then
  flag="ld_nostdlib_opt" op=":=" value="$nm_feature"  \
    . ${NORE_ROOT}/auto/make_define
fi


# check no-pie option
#----------------------------------------
case "$CC_NAME" in
  clang)
    ;;
  gcc)
    nm_feature="-fno-pie"
    nm_feature_name=
    nm_feature_indent=yes
    nm_feature_run=yes
    nm_feature_h=
    nm_feature_flags='-fno-pie'
    nm_feature_test='return 0;'
    . ${NORE_ROOT}/auto/feature
    if [ yes = $nm_found ]; then
      flag="ld_nopie_opt" op=":=" value="$nm_feature"  \
        . ${NORE_ROOT}/auto/make_define
    fi
    ;;
  msvc)
    ;;
esac


# check -Wl,' link option for CC
#----------------------------------------
case "$CC_NAME" in
  clang|gcc)
    nm_feature="-Wl,--wrap"
    nm_feature_name=
    nm_feature_indent=yes
    nm_feature_run=no
    nm_feature_h=
    nm_feature_flags='-Wl,--wrap'
    nm_feature_test=
    . ${NORE_ROOT}/auto/feature
    if [ yes = $nm_found ]; then
      flag="ld_wrap_opt" op=":=" value="${nm_feature}="  \
        . ${NORE_ROOT}/auto/make_define
    fi
    ;;
  msvc)
    ;;
esac


# eof
