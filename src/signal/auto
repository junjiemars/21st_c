# -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## signal/auto
####


if [ -z "$POSIX_ROOT" ]; then
  POSIX_ROOT="src/posix"
fi


# check ncc.h features
ncc_sanitize_address="yes"
. ${POSIX_ROOT}/ncc_auto

# check nlim.h features
nlim_path_max="yes"
. ${POSIX_ROOT}/nlim_auto


echo "checking for {signal} ..."


# check GETPW_R_SIZE_MAX
#----------------------------------------
case $NM_SYSTEM in
  Linux|Darwin)
    nm_feature="GETPW_R_SIZE_MAX"
    nm_feature_name="nm_getpw_r_size_max"
    nm_feature_run=value
    nm_feature_h='
#include <stdio.h>
#include <unistd.h>'
  nm_feature_flags=
  nm_feature_test='
long getpw_r_size_max = sysconf(_SC_GETPW_R_SIZE_MAX);
printf("%ld\n", getpw_r_size_max);
return 0;'
  . ${NORE_ROOT}/auto/feature
    ;;
  *)
    ;;
esac                            # end of GETPW_R_SIZE_MAX



# check nanosleep
#----------------------------------------
nm_feature="nanosleep"
nm_feature_name="nm_nanosleep"
nm_feature_run=no
nm_feature_h='
#include <time.h>'
nm_feature_flags=
nm_feature_test='
struct timespec req, cur;
nanosleep(&req, &cur);
return 0;'
. ${NORE_ROOT}/auto/feature
flag="has_nanosleep" op=":=" value="$nm_found" . ${NORE_ROOT}/auto/make_define



# check clock_nanosleep
#----------------------------------------
nm_feature="clock_nanosleep"
nm_feature_name="nm_clock_nanosleep"
nm_feature_run=no
nm_feature_h='
#include <time.h>
'
nm_feature_flags=
nm_feature_test='
struct timespec req, cur;
clock_nanosleep(CLOCK_REALTIME, &req, &cur);
return 0;'
. ${NORE_ROOT}/auto/feature
flag="has_clock_nanosleep" op=":=" value="$nm_found" . ${NORE_ROOT}/auto/make_define




# check sigqueue
#----------------------------------------
nm_feature="sigqueue"
nm_feature_name="nm_sigqueue"
nm_feature_run=no
nm_feature_h='
#include <signal.h>
#include <unistd.h>'
nm_feature_flags="-D_POSIX_C_SOURCE=$_POSIX_C_SOURCE"
nm_feature_test='
union sigval v = { .sival_int = 0x11223344 };
(void) sigqueue(getpid(), SIGALRM, v);'
. ${NORE_ROOT}/auto/feature
flag="has_sigqueue" op=":=" value="$nm_found" . ${NORE_ROOT}/auto/make_define



# check sys_siglist
#----------------------------------------
nm_feature="sys_siglist"
nm_feature_name="nm_sys_siglist"
nm_feature_run=no
nm_feature_h='#include <signal.h>'
nm_feature_flags=""
nm_feature_test='(void)NSIG;(void*)sys_siglist[0];'
. ${NORE_ROOT}/auto/feature

# check sys_signame
#----------------------------------------
nm_feature="sys_signame"
nm_feature_name="nm_sys_signame"
nm_feature_run=no
nm_feature_h='#include <signal.h>'
nm_feature_flags=""
nm_feature_test='(void)NSIG;(void*)sys_signame[0];'
. ${NORE_ROOT}/auto/feature


# eof
