# -*- mode:sh -*- vim:ft=sh

# check posix features
. src/posix/auto


#check popen fn
#----------------------------------------
nm_feature="popen"
nm_feature_name="nm_have_popen"
nm_feature_run=no
nm_feature_h='#include <stdio.h>'
nm_feature_flags=
nm_feature_inc=
nm_feature_ldlibs=
nm_feature_test='FILE* f=popen("dir","r"); if (f) pclose(f);'
. ${NORE_ROOT}/auto/feature


case $CC_NAME in
  clang|cc)
    ;;
  msvc)
    nm_feature="_popen"
    nm_feature_name="nm_have__popen"
    nm_feature_run=no
    nm_feature_h='#include <stdio.h>'
    nm_feature_flags=
    nm_feature_inc=
    nm_feature_ldlibs=
    nm_feature_test='FILE* f=_popen("dir","r"); if (f) _pclose(f);'
    . ${NORE_ROOT}/auto/feature
    ;;
esac


# check fpurge fn
#----------------------------------------
nm_feature="fpurge"
nm_feature_name="nm_have_fpurge"
nm_feature_run=no
nm_feature_h='#include <stdio.h>'
nm_feature_flags=
nm_feature_inc=
nm_feature_ldlibs=
nm_feature_test='fpurge(stdin);'
. ${NORE_ROOT}/auto/feature

case $NM_SYSTEM in
  Darwin)
    ;;
  Linux)
    nm_feature="__fpurge"
    nm_feature_name="nm_have___fpurge"
    nm_feature_run=no
    nm_feature_h='#include <stdio.h>
                  #include <stdio_ext.h>'
    nm_feature_flags=
    nm_feature_inc=
    nm_feature_ldlibs=
    nm_feature_test='__fpurge(stdin);'
    . ${NORE_ROOT}/auto/feature
    ;;
  WinNT)
    nm_feature="P_tmpdir definition"
    nm_feature_name="nm_have_P_tmpdir"
    nm_feature_run=no
    nm_feature_h='#include <stdio.h>'
    nm_feature_flags=
    nm_feature_inc=
    nm_feature_ldlibs=
    nm_feature_test='printf("%s\n", P_tmpdir);'
    . ${NORE_ROOT}/auto/feature

    ;;
  *)
    ;;
esac

# check open fn
#----------------------------------------
case $NM_SYSTEM in
  Darwin|Linux)
    nm_feature="open"
    nm_feature_name="nm_have_open"
    nm_feature_run=no
    nm_feature_h='#include <fcntl.h>'
    nm_feature_flags=
    nm_feature_test='int fd = open("/dev/zero", 0);'
    . ${NORE_ROOT}/auto/feature
    ;;
  WinNT)
    ;;
  *)
    ;;
esac


# check santizer features
#----------------------------------------
case "$CC_NAME" in
   gcc|clang)
     nm_feature="$CC_NAME -fsanitize=address"
     nm_feature_name=
     nm_feature_indent=yes
     nm_feature_run=no
     nm_feature_h=
     nm_feature_flags='-fsanitize=address'
     nm_feature_test=
     . ${NORE_ROOT}/auto/feature

     if [ yes = $nm_found ]; then
       flag=cflags_sanitize op="+=" value=$nm_feature_flags \
           . ${NORE_ROOT}/auto/make_define
     fi

     nm_feature="$CC_NAME -fsanitize=leak"
     nm_feature_name=
     nm_feature_indent=yes
     nm_feature_run=no
     nm_feature_h=
     nm_feature_flags='-fsanitize=leak'
     nm_feature_test=
     . ${NORE_ROOT}/auto/feature

     if [ yes = $nm_found ]; then
       flag=cflags_sanitize op="+=" value=$nm_feature_flags \
           . ${NORE_ROOT}/auto/make_define
     fi
     ;;
   msvc)
     ;;
esac

# eof
