#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## flex/auto
####


# check posix features
# . src/posix/auto


echo "checking for {flex} ..."

# check flex
#----------------------------------------
has_flex=NO
printf " + checking for flex ... "
if flex --version >/dev/null; then
  flex_lib_dir="$(dirname $(dirname $(command -v flex)))/lib"
  if [ -d ${flex_lib_dir} ]; then
    printf "yes\n"
    has_flex=YES
    flag=LDFLAGS op="+=" value="${nm_libdir_opt}${flex_lib_dir}" \
      . ${NORE_ROOT}/auto/make_define
    flag=has_flex op=":=" value="$has_flex" \
        . ${NORE_ROOT}/auto/make_define
  else
    printf "no\n"
  fi
else
  printf "no\n"
fi

# check bison
#----------------------------------------
has_bison=NO
printf " + checking for bison ... "
if bison --version >/dev/null; then
  printf "yes\n"
  has_bison=YES
  flag=has_bison op=":=" value="$has_bison" \
      . ${NORE_ROOT}/auto/make_define
else
  printf "no\n"
fi

# check compiler options
#----------------------------------------
case "$CC_NAME" in
  gcc|clang)
    nm_feature="$CC_NAME -Wno-unused-function"
    nm_feature_name=
    nm_feature_indent=yes
    nm_feature_run=no
    nm_feature_h=
    nm_feature_flags='-Wno-unused-function'
    nm_feature_test=
    . ${NORE_ROOT}/auto/feature
    if [ yes = $nm_found ]; then
      flag=CFLAGS op="+=" value="$nm_feature_flags" \
          . ${NORE_ROOT}/auto/make_define
    fi
    ;;
  msvc)
    ;;
esac

case "$CC_NAME" in
  gcc|clang)
    nm_feature="$CC_NAME -Wno-sign-compare"
    nm_feature_name=
    nm_feature_indent=yes
    nm_feature_run=no
    nm_feature_h=
    nm_feature_flags='-Wno-sign-compare'
    nm_feature_test=
    . ${NORE_ROOT}/auto/feature
    if [ yes = $nm_found ]; then
      flag=CFLAGS op="+=" value="$nm_feature_flags" \
          . ${NORE_ROOT}/auto/make_define
    fi
    ;;
  msvc)
    ;;
esac



# eof
