#### -*- mode:sh -*- vim:ft=sh
####
## No More than a C build system for clang, gcc and msvc.
## https://github.com/junjiemars/nore
####
## posix/rust_auto
####

has_rustc=""
has_cargo=""
has_rust_fmt=""
has_rust_lldb=""
has_rust_gdb=""
has_rust_src=""
has_rust_etc=""
has_pkg_config="${has_pkg_config:-no}"
has_gtk_ver=""

printf " + checking for rustc ... "
has_rustc="`command -v rustc`"
if [ -x "$has_rustc" ]; then
  flag=has_rustc value="${has_rustc}" . ${NORE_ROOT}/auto/make_define
  printf "yes\n"
else
  has_rustc=""
  printf "no\n"
fi


printf " + checking for cargo ... "
has_cargo="`command -v cargo`"
if [ -x "$has_cargo" ]; then
  flag=has_cargo value="${has_cargo}" . ${NORE_ROOT}/auto/make_define
  printf "yes\n"
else
  has_cargo=""
  printf "no\n"
fi


printf " + checking for rustfmt ... "
has_rust_fmt="`command -v rustfmt`"
if [ -x "$has_rust_fmt" ]; then
  flag=has_rustfmt value="${has_rust_fmt}" . ${NORE_ROOT}/auto/make_define
  printf "yes\n"
else
  has_rust_fmt=""
  printf "no\n"
fi


# check gdb/lldb
#----------------------------------------
case $NM_SYSTEM in
  Darwin)
    printf " + checking for rust-lldb ... "
    has_lldb="`command -v lldb`"
    has_rust_lldb="`command -v rust-lldb`"
    if [ -x "$has_lldb" -a -x "$has_rust_lldb" ]; then
      flag=has_rust_lldb value="$has_rust_lldb" \
                         . ${NORE_ROOT}/auto/make_define
      printf "yes\n"
    else
      has_lldb=""
      has_rust_lldb=""
      printf "no\n"
    fi
    ;;
  Linux|*)
    printf " + checking for rust-gdb ... "
    has_gdb="`command -v gdb`"
    has_rust_gdb="`command -v rust-gdb`"
    if [ -x "$has_gdb" -a -x "$has_rust_gdb" ]; then
      flag=has_rust_gdb value="$has_rust_gdb" \
                        . ${NORE_ROOT}/auto/make_define
      printf "yes\n"
    else
      has_gdb=""
      has_rust_gdb=""
      printf "no\n"
    fi
    ;;
esac


# check rust src/etc
#----------------------------------------
if [ -n "$has_rustc" ]; then
  printf " + checking for rust src ... "
  rust_src_dir="/lib/rustlib/src/rust"
  has_rust_src="$(rustc --print sysroot)${rust_src_dir}"

  if [ "$has_rust_src" != "$rust_src_dir" -a -d "$has_rust_src" ]; then
    flag=has_rust_src value="${has_rust_src}" . ${NORE_ROOT}/auto/make_define
    printf "yes\n"
    printf " + checking for ctags.rust ... "
    rust_ctags_dir="/src/etc/ctags.rust"
    has_rust_ctags="${has_rust_src}${rust_ctags_dir}"
    if [ "$has_rust_ctags" != "$rust_ctags_dir" -a -r "$has_rust_ctags" ]; then
      flag=has_rust_ctags value="${has_rust_ctags}" . ${NORE_ROOT}/auto/make_define
      printf "yes\n"
    else
      rust_ctags_dir=""
      printf "no\n"
    fi
  else
    has_rust_src=""
    printf "no\n"
  fi

  printf " + checking for rust etc ... "
  rust_etc_dir="/lib/rustlib/etc"
  has_rust_etc="$(rustc --print sysroot)${rust_etc_dir}"
  if [ "$has_rust_etc" != "$rust_etc_dir" -a -d "$has_rust_etc" ]; then
    flag=has_rust_etc value="${has_rust_etc}" . ${NORE_ROOT}/auto/make_define
    printf "yes\n"
  else
    has_rust_etc=""
    printf "no\n"
  fi

  printf " + checking for rust commit-hash ... "
  has_rust_hash="$(rustc -vV|grep -e '^commit-hash'|sed -e 's#^commit-hash: \(.*\)$#\1#g') "
  if [ -n "$has_rust_hash" ]; then
    flag=has_rust_hash value="${has_rust_hash}" . ${NORE_ROOT}/auto/make_define
    printf "yes\n"
  else
    has_rust_hash=""
    printf "no\n"
  fi
fi

# check pkg-config
#----------------------------------------
printf " + checking for pkg-config ... "
if [ -z "has_pkg_config" ] || [ 0 -eq $(pkg-config --version 2>&1 1>/dev/null;echo $?) ]; then
  printf "yes\n"
  has_pkg_config=yes
  flag=has_pkg_config op=":=" value="$has_pkg_config" \
                      . ${NORE_ROOT}/auto/make_define
else
  has_pkg_config=no
  printf "no\n"
fi

# check gtk4-rs: https://gtk-rs.org
#----------------------------------------
printf " + checking for gtk4 ... "
if [ -n "$has_pkg_config" ]; then
  pkg_config_gtk4="`pkg-config --modversion gtk4 2>/dev/null`"
  if [ -n "$pkg_config_gtk4" ]; then
    has_gtk_ver="v`echo $pkg_config_gtk4|cut -d'.' -f1`_`echo $pkg_config_gtk4|cut -d'.' -f2`"
    flag=has_gtk_ver op=":=" value="$has_gtk_ver" \
                     . ${NORE_ROOT}/auto/make_define
    printf "yes\n"
  else
    printf "no\n"
  fi
else
  printf "no\n"
fi


# eof
