# -*- mode:sh -*- vim:ft=sh
# jni

flag="# jni" op=":" value="-----------"  . ${NORE_ROOT}/auto/make_define

# java environment
#----------------------------------------
flag=JAVAC value=javac . ${NORE_ROOT}/auto/make_define
flag=JAVAH value=javah . ${NORE_ROOT}/auto/make_define
flag=JAVA  value=java  . ${NORE_ROOT}/auto/make_define

flag=jni_binout value=-o . ${NORE_ROOT}/auto/make_define
if [ "$NM_SYMBOL" == "YES" ]; then
	flag=jni_symbol value=-g . ${NORE_ROOT}/auto/make_define
fi

# check features based on OS
#----------------------------------------
case $CC_NAME in
	clang|gcc)
		nm_feature="$CC_NAME -fPIC switch"
		nm_feature_name=
		nm_feature_run=no
		nm_feature_h=
		nm_feature_flags=-fPIC
		nm_feature_test=
		. ${NORE_ROOT}/auto/feature

		if [ yes = $nm_found ]; then
			flag=CFLAGS op='+=' value='-fPIC' . ${NORE_ROOT}/auto/make_define
		fi
	;;

	msvc)
    # msvc do not use position independent code
  ;;

esac


nt_to_posix_path() {
	if [[ $1 =~ ^[a-zA-Z]:\\.* ]]; then
		echo "\\$1" | \
			sed -e 's#^\\\([a-zA-Z]\):\\#\\\l\1\\#' | \
			sed -e 's#\\#\/#g' 
	else
		echo "$1"
	fi
}


# check jni include
#----------------------------------------
case ${NM_SYSTEM} in
	Darwin)
		flag=jni_inc value="-I$JAVA_HOME/include -I$JAVA_HOME/include/darwin" \
				. ${NORE_ROOT}/auto/make_define

		flag=jni_ldflags value="-L$JAVA_HOME/jre/lib/server" \
				. ${NORE_ROOT}/auto/make_define

		flag=jni_ldlibs value="-ljvm" . ${NORE_ROOT}/auto/make_define
	;;

	Linux)
		flag=jni_inc value="-I$JAVA_HOME/include -I$JAVA_HOME/include/linux" \
			. ${NORE_ROOT}/auto/make_define

		case ${NM_MACHINE} in
			x86_64)
				_cpu_="amd64"
			;;
		esac
	
		flag=jni_ldflags value="-L$JAVA_HOME/jre/lib/${_cpu_}/server" \
			. ${NORE_ROOT}/auto/make_define

		flag=jni_ldlibs value="-ljvm" . ${NORE_ROOT}/auto/make_define
	;;

	WinNT)
		JAVA_HOME=`nt_to_posix_path "$JAVA_HOME"`

		flag=jni_inc value="-I\"$JAVA_HOME/include\" -I\"$JAVA_HOME/include/win32\"" \
				. ${NORE_ROOT}/auto/make_define
	;;

esac

