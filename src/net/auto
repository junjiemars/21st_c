# -*- mode:sh -*- vim:ft=sh
#
# generated by Nore
#


# check header file existing
#----------------------------------------
#echo " + checking C99 header files ..."
include="stdint.h" . ${NORE_ROOT}/auto/include


# check machine features
#----------------------------------------
nm_feature="endian"
nm_feature_name="nm_have_little_endian"
nm_feature_run=value
nm_feature_h="#include <stdio.h>"
nm_feature_flags=
nm_feature_test='int i=0x11223344;
                char *p = (char *)&i;
            		int le = (0x44 == *p);
                printf("%d", le);'
. ${NORE_ROOT}/auto/feature


# check sanitize feature
#----------------------------------------
case "$CC_NAME" in
   gcc|clang)
     nm_feature="$CC_NAME -fsanitize=address"
     nm_feature_name=
     nm_feature_indent=yes
     nm_feature_run=no
     nm_feature_h=
     nm_feature_flags='-fsanitize=address'
     nm_feature_test=
     . ${NORE_ROOT}/auto/feature
     if [ yes = $nm_found ]; then
       flag=f_sanitize op="+=" value=$nm_feature_flags \
           . ${NORE_ROOT}/auto/make_define
     fi
     nm_feature="$CC_NAME -fsanitize=leak"
     nm_feature_name=
     nm_feature_indent=yes
     nm_feature_run=no
     nm_feature_h=
     nm_feature_flags='-fsanitize=leak'
     nm_feature_test=
     . ${NORE_ROOT}/auto/feature
     if [ yes = $nm_found ]; then
       flag=f_sanitize op="+=" value=$nm_feature_flags \
           . ${NORE_ROOT}/auto/make_define
     fi
     ;;		 
   msvc)
     ;;
esac


# check pack struct feature
#----------------------------------------
case "$CC_NAME" in
   gcc|clang)
     nm_feature="$CC_NAME __attribute__((packed))"
     nm_feature_name=
     nm_feature_indent=yes
     nm_feature_run=yes
     nm_feature_h='
#include <stdio.h>
typedef struct __attribute__((packed)) p {
  char a;
  int b;
} p;
'
     nm_feature_flags=
     nm_feature_test='p x; printf("%d", (1+sizeof(int))==sizeof(x));'
     . ${NORE_ROOT}/auto/feature
     if [ yes = $nm_found ]; then
       flag=f_pack_struct op=":=" value=$nm_feature_flags \
           . ${NORE_ROOT}/auto/make_define
     fi
     ;;		 
   msvc)
     ;;
esac


# eof
